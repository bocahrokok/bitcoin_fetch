{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/nurrizkyimani/programming-all/bitcoin_fetch/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'USD'\n    });\n\n    _defineProperty(this, \"cryptoLoop\", () => {\n      let table = [];\n\n      for (let i = 0; i <= this.props.cmc.data.length; i++) {\n        table.push(__jsx(\"div\", {\n          className: \"cryptocmc\",\n          key: this.props.cmc.data[i].id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, __jsx(\"ul\", {\n          className: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \" price for \", this.props.cmc.data[i].name, \" : \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \" USD \"), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"    \", this.props.cmc.data[i].quote.USD.price, \" \")))));\n      }\n\n      return table;\n    });\n  }\n\n  //render the component \n  render() {\n    console.log(this.props.cmc.data.length);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Bitcoin rate for  \", this.props.bpi[this.state.currency].description, \" : \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"  \", this.props.bpi[this.state.currency].code, \"  \"), __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"   \", this.props.bpi[this.state.currency].rate, \"  \"))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), __jsx(\"select\", {\n      onChange: e => this.setState({\n        currency: e.target.value\n      }),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"USD\"), __jsx(\"option\", {\n      value: \"GBP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"GBP\"), __jsx(\"option\", {\n      value: \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"EUR\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Also Check current Another cryptocurrencies Price: \"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.cryptoLoop()));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["/Users/nurrizkyimani/programming-all/bitcoin_fetch/components/Prices.js"],"names":["Prices","React","Component","currency","table","i","props","cmc","data","length","push","id","name","quote","USD","price","render","console","log","bpi","state","description","code","rate","e","setState","target","value","cryptoLoop"],"mappings":"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","sourcesContent":["\n\nclass Prices extends React.Component {\n    state = {\n      currency: 'USD'\n    }\n\n    //component: price of the cyptocurrencies; return the table with JSX; \n    cryptoLoop = () => {\n      let table = []\n\n      for(let i = 0; i <= this.props.cmc.data.length; i++) {\n          table.push(\n             <div className=\"cryptocmc\" key= {this.props.cmc.data[i].id}>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\"> price for {this.props.cmc.data[i].name} : {  }\n                        <span className=\"badge badge-primary\"> USD </span>\n                        <strong>    {this.props.cmc.data[i].quote.USD.price} </strong>\n                         \n                    </li>\n                </ul>\n               \n          </div>\n          )\n      }\n      return table\n    }\n\n\n    \n\n    //render the component \n    render() {\n        console.log(this.props.cmc.data.length)\n      return (\n        <div>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Bitcoin rate for  {this.props.bpi[this.state.currency].description} : { }\n            <span className=\"badge badge-primary\">  {this.props.bpi[this.state.currency].code}  </span> \n            <strong>   {this.props.bpi[this.state.currency].rate}  </strong>\n          </li>\n          </ul>\n          <br/>\n          <select onChange={e => this.setState({currency: e.target.value})} className=\"form-control\">\n            <option value=\"USD\">USD</option>\n            <option value=\"GBP\">GBP</option>\n            <option value=\"EUR\">EUR</option>\n          </select>\n          \n          <br/>\n\n          <p>Also Check current Another cryptocurrencies Price: </p>\n          \n          {/* render the cyptoLoop component */}\n          <div>\n              {this.cryptoLoop()}\n          </div>\n\n        \n          \n        </div>\n        \n      );\n    }\n  }\n  \n  export default Prices;"]},"metadata":{},"sourceType":"module"}