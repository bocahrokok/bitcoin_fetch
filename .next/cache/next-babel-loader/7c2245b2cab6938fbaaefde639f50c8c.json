{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/nurrizkyimani/programming-all/bitcoin_fetch/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cryptoLoop\", function () {\n      var table = [];\n\n      for (var i = 0; i <= 2; i++) {\n        table.push(__jsx(\"div\", {\n          className: \"cryptocmc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, __jsx(\"ul\", {\n          className: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \" price for \", _this.props.cmc.data[i].name, \" : \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \" USD \"), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"    \", _this.props.cmc.data[i].quote.USD.price, \" \")))));\n      }\n\n      return table;\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Bitcoin rate for  \", this.props.bpi[this.state.currency].description, \" : \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"  \", this.props.bpi[this.state.currency].code, \"  \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"   \", this.props.bpi[this.state.currency].rate, \"  \"))), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: \"USD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"EUR\")), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Also Check current Another cryptocurrencies Price: \"), __jsx(\"div\", {\n        className: \"cryptocmc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" price for \", this.props.cmc.data[0].name, \" : \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" USD \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"    \", this.props.cmc.data[0].quote.USD.price, \" \")))), this.cryptoLoop());\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/Users/nurrizkyimani/programming-all/bitcoin_fetch/components/Prices.js"],"names":["Prices","currency","table","i","push","props","cmc","data","name","quote","USD","price","bpi","state","description","code","rate","e","setState","target","value","cryptoLoop","React","Component"],"mappings":"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","sourcesContent":["\n\nclass Prices extends React.Component {\n    state = {\n      currency: 'USD'\n    }\n\n\n    cryptoLoop = () => {\n      let table = []\n\n      for(let i = 0; i <=2; i++) {\n          table.push(\n             <div className=\"cryptocmc\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\"> price for {this.props.cmc.data[i].name} : {  }\n                        <span className=\"badge badge-primary\"> USD </span>\n                        <strong>    {this.props.cmc.data[i].quote.USD.price} </strong>\n                         \n                    </li>\n                </ul>\n               \n          </div>\n          )\n      }\n      return table\n    }\n  \n    render() {\n  \n      return (\n        <div>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Bitcoin rate for  {this.props.bpi[this.state.currency].description} : { }\n            <span className=\"badge badge-primary\">  {this.props.bpi[this.state.currency].code}  </span> \n            <strong>   {this.props.bpi[this.state.currency].rate}  </strong>\n          </li>\n          </ul>\n          <br/>\n          <select onChange={e => this.setState({currency: e.target.value})} className=\"form-control\">\n            <option value=\"USD\">USD</option>\n            <option value=\"GBP\">GBP</option>\n            <option value=\"EUR\">EUR</option>\n          </select>\n          \n          <br/>\n\n          <p>Also Check current Another cryptocurrencies Price: </p>\n\n          <div className=\"cryptocmc\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\"> price for {this.props.cmc.data[0].name} : {  }\n                        <span className=\"badge badge-primary\"> USD </span>\n                        <strong>    {this.props.cmc.data[0].quote.USD.price} </strong>\n                         \n                    </li>\n                </ul>\n               \n          </div>\n\n          {this.cryptoLoop()}\n        </div>\n        \n      );\n    }\n  }\n  \n  export default Prices;"]},"metadata":{},"sourceType":"module"}