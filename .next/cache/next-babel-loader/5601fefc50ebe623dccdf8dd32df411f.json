{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport './style.css';\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'USD'\n    });\n\n    _defineProperty(this, \"cryptoLoop\", () => {\n      let table = [];\n      let n = this.props.cmc.data.length;\n\n      for (let i = 0; i <= n - 1; i++) {\n        table.push(__jsx(\"div\", {\n          className: \"cryptocmc\",\n          key: this.props.cmc.data[i].id\n        }, __jsx(\"ul\", {\n          className: \"list-group\"\n        }, __jsx(\"li\", {\n          className: \"list-group-item\"\n        }, \" Price for \", this.props.cmc.data[i].name, \" : \", __jsx(\"span\", {\n          className: \"badge badge-primary\"\n        }, \" USD \"), __jsx(\"strong\", null, \"    \", this.props.cmc.data[i].quote.USD.price, \" \"), __jsx(\"span\", {\n          className: \"badge badge-success\"\n        }, \" VOLUME 24H:  \"), __jsx(\"strong\", null, \"    \", this.props.cmc.data[i].quote.USD.volume_24h, \" \")))));\n      }\n\n      return table;\n    });\n  }\n\n  //render the component \n  render() {\n    console.log('totale iki:' + this.props.cmc.data.length);\n    return __jsx(\"div\", null, __jsx(\"ul\", {\n      className: \"list-group\"\n    }, __jsx(\"li\", {\n      className: \"list-group-item\"\n    }, \"Bitcoin rate for  \", this.props.bpi[this.state.currency].description, \" : \", __jsx(\"span\", {\n      className: \"badge badge-primary\"\n    }, \"  \", this.props.bpi[this.state.currency].code, \"  \"), __jsx(\"strong\", null, \"   \", this.props.bpi[this.state.currency].rate, \"  \"))), __jsx(\"br\", null), __jsx(\"select\", {\n      onChange: e => this.setState({\n        currency: e.target.value\n      }),\n      className: \"form-control\"\n    }, __jsx(\"option\", {\n      value: \"USD\"\n    }, \"USD\"), __jsx(\"option\", {\n      value: \"GBP\"\n    }, \"GBP\"), __jsx(\"option\", {\n      value: \"EUR\"\n    }, \"EUR\")), __jsx(\"br\", null), __jsx(\"p\", null, \"Also Check current Another cryptocurrencies Price: \"), __jsx(\"div\", null, this.cryptoLoop()));\n  }\n\n}\n\nexport default Prices;","map":null,"metadata":{},"sourceType":"module"}