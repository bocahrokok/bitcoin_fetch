{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport './style.css';\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cryptoLoop\", function () {\n      var table = [];\n      var n = _this.props.cmc.data.length;\n\n      for (var i = 0; i <= n - 1; i++) {\n        table.push(__jsx(\"div\", {\n          className: \"cryptocmc\",\n          key: _this.props.cmc.data[i].id\n        }, __jsx(\"ul\", {\n          className: \"list-group\"\n        }, __jsx(\"li\", {\n          className: \"list-group-item\"\n        }, \" Price for \", _this.props.cmc.data[i].name, \" : \", __jsx(\"span\", {\n          className: \"badge badge-primary\"\n        }, \" USD \"), __jsx(\"strong\", null, \"    \", _this.props.cmc.data[i].quote.USD.price, \" \"), __jsx(\"span\", {\n          className: \"badge badge-success\"\n        }, \" VOLUME 24H:  \"), __jsx(\"strong\", null, \"    \", _this.props.cmc.data[i].quote.USD.volume_24h, \" \")))));\n      }\n\n      return table;\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    //render the component \n    value: function render() {\n      var _this2 = this;\n\n      console.log('totale iki:' + this.props.cmc.data.length);\n      return __jsx(\"div\", null, __jsx(\"ul\", {\n        className: \"list-group\"\n      }, __jsx(\"li\", {\n        className: \"list-group-item\"\n      }, \"Bitcoin rate for  \", this.props.bpi[this.state.currency].description, \" : \", __jsx(\"span\", {\n        className: \"badge badge-primary\"\n      }, \"  \", this.props.bpi[this.state.currency].code, \"  \"), __jsx(\"strong\", null, \"   \", this.props.bpi[this.state.currency].rate, \"  \"))), __jsx(\"br\", null), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        className: \"form-control\"\n      }, __jsx(\"option\", {\n        value: \"USD\"\n      }, \"USD\"), __jsx(\"option\", {\n        value: \"GBP\"\n      }, \"GBP\"), __jsx(\"option\", {\n        value: \"EUR\"\n      }, \"EUR\")), __jsx(\"br\", null), __jsx(\"p\", null, \"Also Check current Another cryptocurrencies Price: \"), __jsx(\"div\", null, this.cryptoLoop()));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":null,"metadata":{},"sourceType":"module"}